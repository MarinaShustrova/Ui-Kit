import { useLayoutEffect, useRef } from 'react'

/**
 * Хук useCurrentValueRef используется для создания рефа,
 * который всегда содержит последнее переданное значение.
 * Он полезен, когда нужно получить доступ к актуальному
 * значению без повторного рендера компонента.
 *
 * Как это работает:
 * - Внутри хука создается реф с помощью `useRef`, который
 * инициализируется переданным значением `value`.
 * - Затем, внутри `useLayoutEffect`, значение рефа обновляется
 * на последнее переданное значение `value` при каждом рендере,
 * гарантируя, что реф всегда будет содержать актуальное значение.
 * - В отличие от `useEffect`, `useLayoutEffect` срабатывает
 * синхронно после всех изменений DOM, но до обновления экрана,
 * что позволяет избежать задержек в получении актуального значения.
 *
 * Этот хук может быть полезен в ситуациях, когда нужно
 * обращаться к последнему значению, переданному в хук,
 * без необходимости рендера компонента, например, при
 * обработке событий или в колбэках.
 *
 * @param value - значение, которое необходимо отслеживать.
 * @returns Реф, который содержит последнее переданное значение.
 */
export function useCurrentValueRef<T>(value: T) {
    const ref = useRef(value)

    useLayoutEffect(() => {
        ref.current = value
    })

    return ref
}
