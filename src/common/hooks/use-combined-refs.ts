import { Ref, useMemo, useRef } from 'react'
import { combineRefs } from '../utils/combine-refs'

/**
 * Хук useCombinedRefs объединяет переданную ссылку с локальной
 * ссылкой, создавая одну комбинированную ссылку. Это полезно,
 * когда необходимо использовать несколько рефов на одном
 * элементе и гарантировать, что все они будут правильно
 * обновлены при изменении.
 *
 * Как это работает:
 * - Внутри хука создается локальная ссылка `currentRef` с
 * помощью `useRef`, инициализируемая как `null`.
 * - Затем, с использованием `useMemo`, создается комбинированная
 * ссылка `mergedRefs` путем вызова функции `combineRefs`,
 * которая объединяет переданную ссылку `ref` и локальную
 * ссылку `currentRef`. Это гарантирует, что при каждом рендере
 * возвращается актуальная комбинированная ссылка.
 * - Хук возвращает объект, содержащий как локальную ссылку
 * `currentRef`, так и объединенную ссылку `mergedRefs`.
 *
 * Этот хук полезен, когда вы хотите передать реф как
 * пропс в компонент, но при этом также хотите иметь доступ
 * к рефу внутри своего компонента, сохраняя оба рефа в
 * актуальном состоянии.
 *
 * @param ref - реф, который необходимо объединить с локальной ссылкой.
 * @returns Объект с двумя рефами: `currentRef` (локальный реф)
 * и `mergedRefs` (объединенный реф).
 */
export const useCombinedRefs = <T extends HTMLElement>(ref: Ref<T>) => {
    const currentRef = useRef<T>(null)

    const mergedRefs = useMemo(() => combineRefs(ref, currentRef), [ref])

    return {
        currentRef,
        mergedRefs,
    }
}
