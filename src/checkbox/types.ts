import { ReactNode } from 'react'
import { SIZES } from './constants'

type Values<T> = T[keyof T]
export type CheckboxSize = Values<typeof SIZES>

export type ChangeEventCheckboxData = {
    value: string
    checked: boolean
}

export type CheckboxProps = {
    /**
     * Размер компонента Checkbox.
     *
     * Задает габариты чекбокса с предустановленными размерами из SIZES.
     */
    size?: CheckboxSize
    /**
     * Текст, отображаемый рядом с чекбоксом.
     *
     * Если задан, используется для простого текстового лейбла.
     */
    label?: string
    /**
     * Контент, который можно разместить рядом с чекбоксом.
     *
     * Позволяет передать сложное содержимое в виде дочерних элементов,
     * например, иконки или другие компоненты.
     */
    children?: ReactNode
    /**
     * Уникальное значение для атрибута id.
     *
     * Полезно для привязки элементов к чекбоксу и управления доступностью.
     */
    id?: string
    /**
     * Имя чекбокса для группировки и отправки данных.
     *
     * Позволяет объединять чекбоксы с одинаковым именем для удобства обработки.
     */
    name?: string
    /**
     * Значение, отправляемое с формой при выборе чекбокса.
     *
     * Содержит значение для отправки при сабмите формы.
     */
    value?: string
    /**
     * Статус выбора чекбокса.
     *
     * Устанавливает, отмечен ли чекбокс по умолчанию.
     */
    checked?: boolean
    /**
     * Состояние неопределенности чекбокса.
     *
     * Позволяет задать промежуточное состояние для чекбокса,
     * часто используется для обозначения частичного выбора.
     */
    indeterminate?: boolean
    /**
     * Отключение чекбокса.
     *
     * Делает чекбокс неактивным и не позволяет пользователю его выбрать.
     */
    disabled?: boolean
    /**
     * Имя пользовательского класса для стилизации.
     *
     * Позволяет применять кастомные стили через CSS-классы.
     */
    className?: string
    /**
     * Атрибут для использования в автоматизированных тестах.
     *
     * Используется для точного поиска элемента в тестах.
     */
    dataTestId?: string
    /**
     * Функция, вызываемая при изменении состояния чекбокса.
     *
     * Вызывается при выборе или отмене выбора чекбокса. Передает данные
     * события и текущие значения чекбокса (выбран или нет).
     */
    onChange?: (event: React.ChangeEvent<HTMLInputElement>, data: ChangeEventCheckboxData) => void
}
